#!/bin/bash

# Parses version from xadf itself
xadf_version_parser(){

local version parsed_xadf_version ifs
local major_ver minor_ver

# Get from xadf file itself
source <(grep '^version=' ${git_xadf_path})

# Remove leading 'v', and any label (after '+')
parsed_xadf_version=$(echo $version|sed 's/^.//;s/+.*$//')

# Split the parsed version as a dot delimited array
ifs="$IFS"
IFS='.'
for val in ${parsed_xadf_version}
do # set them into an array
  xadf_version_array+=($val)
done
IFS="$ifs"

major_ver=${xadf_version_array[0]}
minor_ver=${xadf_version_array[1]}

if test "$xadfcommit_major" -eq 0 ; then
    export xadf_major_ver="v${major_ver}"
    export xadf_minor_ver=$((++minor_ver))
else
    export xadf_major_ver="v$((++major_ver))"
    export xadf_minor_ver=0
fi
unset xadfcommit_major
}

# Check if $git_xadf_path is provided
# Otherwise check if xadf is modified
# If it is, add to $git_xadf_path
xadf_check_path(){
echo "${git_xadf_path}" | grep -q 'xadf$'
if test $? -gt 0
then
  unset xadf_is_modified git_xadf_path
  xadf_is_modified=$(git status -s|grep xadf$|sed 's_...__')
  if test -z "$xadf_is_modified"
  then
    printf >&2 "xadf is not modified\n"
    export xadfcommit_bad_states=1
    exit 2
  else
    export git_xadf_path=$(realpath ${xadf_is_modified})
  fi
fi
}

xadf_commit_append_version(){
# Check if label is given
# If yes, do long form
# If none, do short form
xadf_version_only="${xadf_major_ver}\.${xadf_minor_ver}\.$(date +%Y%m%d\.%H%M)"

if test -z "$xadf_version_label"
then
  xadf_version_full="${xadf_version_only}"
else
  xadf_version_full="${xadf_version_only}+${xadf_version_label}"
fi

unset xadf_version_label

sed -i -e 's#^version=.*$#version=DUMMYVER#' \
    -e "s#DUMMYVER#${xadf_version_full}#" "${git_xadf_path}"
}

xadf_safe_commit(){
${git_xadf_path} -v
if test $? -gt 0
then
  printf >&2 "WARNING! Malformed executable '%s'\n" "${git_xadf_path}"
else
  if test ${xadfcommit_nogit} -eq 0 ; then
    git commit ${git_xadf_path}
  fi
fi
}

xadfcommit_help(){
# runs xadfcommit_version
xadfcommit_version
# prints help text then exit
cat <<TERMINUS
  A bash script to handle version number of xadf script. Will
  import $version from the target script, and surgically parse
  version numbers, and increment when needed. Then will reappend
  the version number to the version variable of the script.

  Currently works with the following version format:

  v<major_version>.<minor_version>.<YYYYMMDD.HHMM>[+<label text>]

  (eg. v2.1.20230622.1520+adds_support_for_zsh)

USAGE

  xadfcommit -L <short label> --no-git --path bin/xadf -M

Note: Argument positioning is arbitrary, and all are optional.
      Will detect unstaged modified files with git when given
      no arguments.

OPTIONS

  --label/-L LABEL   Appends label LABEL to the end of version string.
  --path/-p PATH     Uses PATH instead of traversing git output.
  --no-git/-n        Does not perform git commit to target file.
  --major/-M         Resets minor version and increment major version.
  --version/-v       Prints version number, then exit.
  --help/-h          Prints this help text, then exit.

TERMINUS
}

xadfcommit_version(){
# Prints version, then exit
printf "xadfcommit version %s\n\n" "$version"
}

# Version number, so help can show useful info
version=v0.9

# Safety feature, if 1 then abort at execution
xadfcommit_bad_states=0

# Safety feature, if 1 then only test and modify, but
# do not do git operations
xadfcommit_nogit=0

# Is the version increment a major version increment?
xadfcommit_major=0

# Parse arguments and call functions
# If -L/--label is given, parse label
# If -p/--path is given, use path
# if -n/--no-git is given, do not perform git operations
# If -M/--major is given, increment major version

while :;
do
  case $1 in
    -v | --version )
      xadfcommit_version
      exit 0
      ;;
    -h | --help )
      xadfcommit_help
      exit 0
      ;;
    -L | --label )
      if test -z "$2"
      then
        printf >&2 "WARNING! No label given\n"
        export xadfcommit_bad_states=1
        exit 3
      else
        xadf_version_label="$2"
        shift 2
      fi
      ;;
    -p | --path )
      if test -z "$2"
      then
        printf >&2 "WARNING! No path to xadf given\n"
        export xadfcommit_bad_states=1
        exit 4
      else
        export git_xadf_path="$(realpath $2)"
      fi
      shift 2
      ;;
    -M | --major )
      export xadfcommit_major=1
      shift
      ;;
    -n | --no-git )
      export xadfcommit_nogit=1
      shift
      ;;
    "" )
      break
      ;;
    * )
      printf >&2 "WARNING! Unknown argument '%s'\n" "$1"
      export xadfcommit_bad_states=1
      exit 5
      ;;
  esac
done

# Protective measures, to only run if state is good
if test $xadfcommit_bad_states -eq 0
then
  xadf_check_path
  xadf_version_parser
  xadf_commit_append_version
  xadf_safe_commit
fi

